// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  firstName   String
  lastName    String
  email       String       @unique
  clerkId     String       @unique
  imageUrl    String?
  collections Collection[]
  entries     Entry[]
  draft       Draft?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Collection {
  id          String   @id @default(uuid())
  name        String
  description String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  entries     Entry[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, name])
}

model Entry {
  id           String      @id @default(uuid())
  title        String
  content      String      @db.Text
  mood         String
  moodScore    Int
  moodImageUrl String?
  collection   Collection? @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  collectionId String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         User        @relation(fields: [userId], references: [id])
  userId       String
}

model Draft {
  id        String   @id @default(uuid())
  title     String
  content   String   @db.Text
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
